/* _typography.css */
.container-typography {
 /*
   * Purpose: Sets the color of the text.
   * Syntax: color: <color>;
   * Key Values & Usage: `currentColor`, color names, hex codes, `rgb()`, `rgba()`, `hsl()`, `hsla()`.
   */
 color: initial;
 
 /*
   * Purpose: Aligns text horizontally within the container.
   * Syntax: text-align: <value>;
   * Key Values & Usage:
   * - `left`, `right`, `center`: Common alignment options.
   * - `justify`: Stretches lines of text so each has equal width.
   * - `start`, `end`: Logical properties that align text based on writing direction. `start` is `left` in LTR and `right` in RTL.
   */
 text-align: left;
 
 /*
   * Purpose: Specifies the height of a line of text.
   * Syntax: line-height: <value>;
   * When to Use: A unitless value (e.g., `1.5`) is recommended as it's a multiplier of the font size, making it scale proportionally.
   */
 line-height: normal;
 
 /*
   * Purpose: Controls the spacing between words.
   * Syntax: word-spacing: <value>;
   * Key Values & Usage: `normal`, `length` (`px`, `em`, `rem`).
   */
 word-spacing: normal;
 
 /*
   * Purpose: Controls the spacing between characters.
   * Syntax: letter-spacing: <value>;
   * Key Values & Usage: `normal`, `length` (`px`, `em`, `rem`).
   */
 letter-spacing: normal;
 
 /*
   * Purpose: Specifies how white space is handled within an element.
   * Syntax: white-space: <value>;
   * Key Values & Usage:
   * - `normal`: Collapses multiple spaces into a single space.
   * - `nowrap`: Prevents text from wrapping, causing it to overflow.
   * - `pre`: Preserves all white space exactly as written in the source code.
   * - `pre-wrap`: Preserves white space but allows lines to wrap.
   */
 white-space: normal;
 
 /*
   * Purpose: Sets the text decoration.
   * Syntax: text-decoration: <line> <style> <color> <thickness>;
   * When to Use: To add, remove, or customize underlines, overlines, and strikethroughs.
   * Alternatives: Use longhand properties for individual control.
   */
 text-decoration: none;
 text-decoration-line: none;
 /* Possible values: `none`, `underline`, `overline`, `line-through`. */
 text-decoration-style: solid;
 /* Possible values: `solid`, `double`, `dotted`, `dashed`, `wavy`. */
 text-decoration-color: initial;
 text-decoration-thickness: auto;
}

.container-typography-font {
 /*
   * Purpose: A shorthand for setting all font properties in a single declaration.
   * Syntax: font: [font-style] [font-variant] [font-weight] [font-stretch] [font-size] / [line-height] [font-family];
   * When to Use: For a concise way to set all core font properties at once.
   * Example: font: italic small-caps 700 1.2em/1.5 "Georgia", serif;
   */
 font: normal;
 
 /*
   * Purpose: Sets the font size.
   * Syntax: font-size: <value>;
   * Key Values & Usage:
   * - `px`, `em`, `rem`: Fixed and relative units. Use `rem` for better accessibility as it scales with the user's browser font size setting.
   * - `vh`, `vw`: Viewport-relative units, great for fluid typography.
   * - `xx-small`, `x-small`, `small`, `medium`, etc.: Absolute keywords.
   * - `%`: A percentage of the parent element's font size.
   */
 font-size: medium;
 
 /*
   * Purpose: Specifies the font family for text.
   * Syntax: font-family: <font-name-1>, <font-name-2>, ... | <generic-family>;
   * Key Values & Usage: Provide a list of fonts as fallbacks, ending with a generic family to ensure the browser has a style to fall back on.
   * Example: font-family: "Helvetica Neue", Arial, sans-serif;
   */
 font-family: sans-serif;
 
 /*
   * Purpose: Sets the boldness or lightness of the font.
   * Syntax: font-weight: <value>;
   * Key Values & Usage: `normal`, `bold`, `lighter`, `bolder`, or numeric values from `100` (thinnest) to `900` (thickest).
   */
 font-weight: normal;
 
 /*
   * Purpose: Sets the font style, such as italic.
   * Syntax: font-style: <value>;
   * Key Values & Usage: `normal`, `italic`, `oblique`.
   */
 font-style: normal;
 
 /*
   * Purpose: Displays a small-caps font.
   * Syntax: font-variant: <value>;
   * Key Values & Usage: `normal`, `small-caps`.
   */
 font-variant: normal;
 
 /*
   * Purpose: Adjusts the font face's normal aspect ratio.
   * Syntax: font-stretch: <value>;
   * When to Use: To stretch or condense a font. This is not widely supported by all fonts.
   */
 font-stretch: normal;
}

.container-columns {
 /*
   * Purpose: Sets the number of columns an element's content should be divided into.
   * Syntax: column-count: <integer>;
   * When to use: To quickly create a layout with a fixed number of columns without using more complex layout methods.
   * Example: column-count: 3;
   */
 column-count: auto;
 
 /*
   * Purpose: Specifies the width of the columns.
   * Syntax: column-width: <length>;
   * When to use: To create columns that automatically fit as many as possible into the available space, each with a minimum width.
   * Example: column-width: 15em;
   */
 column-width: auto;
 
 /*
   * Purpose: A shorthand for setting both `column-width` and `column-count`.
   * Syntax: columns: <column-width> <column-count>;
   * When to use: For a concise way to define your column layout.
   * Example: columns: 200px 3;
   */
 columns: auto;
 
 /*
   * Purpose: Sets the gap between the columns.
   * Syntax: column-gap: <length>;
   * When to use: To add space between columns for better readability.
   * Example: column-gap: 2rem;
   */
 column-gap: normal;
 
 /*
   * Purpose: Specifies a style for the rule (a line) drawn between columns.
   * Syntax: column-rule: <width> <style> <color>;
   * When to use: To visually separate content in adjacent columns.
   * Example: column-rule: 1px solid #ccc;
   */
 column-rule: none;
}

/* ───────────────────────────────────────────── */


@layer typographies {
 
 @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Inter:wght@400;600&display=swap');
 
 /* .container-typography */
 /* ───────────────────────────────────────────── */
 /* .container-typography-font */
 body {
  font-family: 'Inter', sans-serif;
  color: rgb(30, 41, 59);
 }
 
 .supblock h1,
 .supblock h2,
 .supblock h3,
 .supblock h4{
  font-family: 'Playfair Display', serif;
 }
 
 /* ───────────────────────────────────────────── */
 /* .container-columns */
 /* ───────────────────────────────────────────── */

}