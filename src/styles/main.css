/* ========================================================
   ðŸ“„ main.css - Gugu's learning + base style file
   Purpose: Helps you learn + start styling your portfolio
========================================================== */

/* -------------------------------------
   1. CSS RESET (Make all browsers behave)
-------------------------------------- */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* -------------------------------------
   2. BASE TYPOGRAPHY
-------------------------------------- */
html {
  font-size: 16px;
  font-family: sans-serif;
  line-height: 1.5;
}

body {
  background-color: #f5f5f5;
  color: #222;
  padding: 2rem;
}

/* -------------------------------------
   3. LAYOUT HELPERS
-------------------------------------- */
.container {
  max-width: 800px;
  margin: 0 auto;
  padding: 1rem;
}

section {
  margin-bottom: 2rem;
}

/* -------------------------------------
   4. TYPOGRAPHY STYLING
-------------------------------------- */
h1, h2, h3 {
  font-weight: bold;
  margin-bottom: 0.5rem;
}

p {
  margin-bottom: 1rem;
}

/* -------------------------------------
   5. HEADER STYLES
-------------------------------------- */
header {
  background-color: #222;
  color: #fff;
  padding: 1rem;
  text-align: center;
  border-radius: 8px;
}

/* -------------------------------------
   6. LINK STYLES
-------------------------------------- */
a {
  color: blue;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* -------------------------------------
   7. BUTTON STYLES
-------------------------------------- */
button {
  padding: 0.5rem 1rem;
  border: none;
  background-color: #333;
  color: white;
  border-radius: 4px;
  cursor: pointer;
}

button:hover {
  background-color: #555;
}

/* -------------------------------------
   8. UTILITY CLASSES (Tailwind-style, manual)
-------------------------------------- */
.text-center { text-align: center; }
.mt-1 { margin-top: 0.5rem; }
.mt-2 { margin-top: 1rem; }
.mt-4 { margin-top: 2rem; }

/* -------------------------------------
   9. ADVANCED: COMMENTED FOR FUTURE YOU ðŸ”’
-------------------------------------- */

/* ðŸ‘‡ RESPONSIVE DESIGN (start learning when you're comfy with layout basics)
@media (max-width: 600px) {
  body {
    padding: 1rem;
  }

  .container {
    max-width: 100%;
  }
}
*/

/* ðŸ‘‡ CSS VARIABLES (a.k.a custom properties â€” great for themes)
:root {
  --main-color: #4caf50;
  --text-color: #222;
}

body {
  color: var(--text-color);
  background-color: var(--main-color);
}
*/

/* ðŸ‘‡ FLEXBOX (start using when you want to arrange elements side-by-side)
.flex-row {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
*/

/* ðŸ‘‡ GRID LAYOUT (use for full-page layout systems â€” learn after flexbox)
.grid-2-col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}
*/

/* ðŸ‘‡ ANIMATIONS (learn when you want to add polish)
@keyframes fadeIn {
  from { opacity: 0; }
  to   { opacity: 1; }
}

.fade-in {
  animation: fadeIn 1s ease-in-out;
}
*/

/* ðŸ‘‡ DARK MODE (a more advanced real-world feature to learn later)
@media (prefers-color-scheme: dark) {
  body {
    background-color: #121212;
    color: #eee;
  }
}
*/

/* ðŸ‘‡ BEM NAMING CONVENTION (write CSS classes like real pros)
.block__element--modifier {
  /* read about BEM when you want to write scalable CSS */
}
*/

/* ðŸ‘‡ SASS / SCSS (a language that compiles into CSS â€” donâ€™t rush)
$primary-color: #009688;

body {
  color: $primary-color;
}
*/
